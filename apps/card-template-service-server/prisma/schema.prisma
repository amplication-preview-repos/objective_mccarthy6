datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Template {
  cards       Card[]
  createdAt   DateTime @default(now())
  description String?
  design      Json?
  id          String   @id @default(cuid())
  store       Store?   @relation(fields: [storeId], references: [id])
  storeId     String?
  title       String?
  updatedAt   DateTime @updatedAt
}

model Card {
  createdAt    DateTime        @default(now())
  creationDate DateTime?
  id           String          @id @default(cuid())
  status       EnumCardStatus?
  template     Template?       @relation(fields: [templateId], references: [id])
  templateId   String?
  updatedAt    DateTime        @updatedAt
  user         User?           @relation(fields: [userId], references: [id])
  userId       String?
}

model Store {
  address            String?
  contactInformation String?
  createdAt          DateTime   @default(now())
  id                 String     @id @default(cuid())
  staffItems         Staff[]
  templates          Template[]
  updatedAt          DateTime   @updatedAt
  user               User?      @relation(fields: [userId], references: [id])
  userId             String?
}

model Staff {
  createdAt DateTime @default(now())
  email     String?
  id        String   @id @default(cuid())
  name      String?
  store     Store?   @relation(fields: [storeId], references: [id])
  storeId   String?
  updatedAt DateTime @updatedAt
}

model User {
  cards     Card[]
  createdAt DateTime          @default(now())
  email     String?           @unique
  firstName String?
  id        String            @id @default(cuid())
  lastName  String?
  password  String
  roles     Json
  stores    Store[]
  updatedAt DateTime          @updatedAt
  username  String            @unique
  userType  EnumUserUserType?
}

enum EnumCardStatus {
  Option1
}

enum EnumUserUserType {
  Option1
}
